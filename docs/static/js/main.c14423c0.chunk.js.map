{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiffGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","aria-label","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GiffGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,UAAU,OAAOC,SATN,SAACC,GAClBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC1BT,GAAc,SAACU,GAAD,OAAUR,GAAV,mBAAyBQ,OACvCP,EAAc,MAKlB,SACI,uBACIQ,KAAK,OACLP,UAAU,cACVQ,YAAY,eACZC,MAAOX,EACPY,SAnBmB,SAACR,GAC5BH,EAAcG,EAAES,OAAOF,QAmBfG,aAAW,8B,+BC3BdC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKhB,UAAU,2DAAf,UACI,qBAAKA,UAAU,YAAY8B,IAAKd,EAAKe,IAAKL,IAC1C,mBAAG1B,UAAU,kBAAb,SAAgC0B,QCuB7BM,EAzBE,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAP,SAACA,GAAc,IAAD,EACZjB,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WAENvB,EAAQC,GACHuB,MAAK,SAACb,GAAD,OAASW,EAAS,CACpBd,KAAMG,EACNS,SAAS,SAElB,CAACnB,IAEGoB,EDdwBI,CAAaxB,GAAhCa,EADmB,EACxBN,KAAaY,EADW,EACXA,QAGpB,OACI,0BAASjC,UAAU,gBAAnB,UACI,oBAAIA,UAAU,wCAAd,SAAuDc,IAEtDmB,GAAW,mBAAGjC,UAAU,oCAAb,wBAEZ,yBAASA,UAAU,YAAnB,SAEQ2B,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEoBtBc,EAlCM,WAAO,IAAD,EACa1C,mBAAS,CAAC,cADvB,mBAChB2C,EADgB,KACJ5C,EADI,KAGvB,OACI,sBAAMI,UAAU,OAAhB,SACI,oCACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,QAAd,0BACA,cAAC,EAAD,CAAaJ,cAAeA,OAEhC,oCACI,6CAGI4C,EAAWjB,KAAI,SAACT,GAAD,OAEX,cAAC,EAAD,CAEIA,SAAUA,GADLA,e,MCfrC2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c14423c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValueChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(InputValue.trim().length > 2){\r\n            setCategories((cats)=> [InputValue, ...cats]);\r\n            setInputValue(''); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                className='form__input'\r\n                placeholder='Add category'\r\n                value={InputValue}\r\n                onChange={handleInputValueChange}\r\n                aria-label='Add category of images'\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=D7J0mbeQtJgSl2WYcV5jDvdrB2lgcs8x`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fast animate__fadeInDown'>\r\n            <img className='card__img' src={url} alt={title} />\r\n            <p className='card__paragraph'>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GiffGrid = ({ category }) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <article className='card-category'>\r\n            <h2 className='animate__animated animate__fadeInDown'>{category}</h2>\r\n\r\n            {loading && <p className='animate__animated  animate__flash'>Loading...</p>}\r\n\r\n            <section className='card-grid'>\r\n                {\r\n                    images.map((img) =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </section>\r\n\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default GiffGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then((img) => setstate({\r\n                data: img,\r\n                loading: false\r\n            }))\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport AddCategory from './components/AddCategory'\r\nimport GiffGrid from \"./components/GiffGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    return (\r\n        <main className='main'>\r\n            <article>\r\n                <div className='container-title'>\r\n                    <h1 className='title'>GifExpertApp</h1>\r\n                    <AddCategory setCategories={setCategories} />\r\n                </div>\r\n                <section>\r\n                    <h2>Categories:</h2>\r\n\r\n                    {\r\n                        categories.map((category) =>\r\n                        (\r\n                            <GiffGrid\r\n                                key={category}\r\n                                category={category}\r\n                            />\r\n                        )\r\n                        )\r\n                    }\r\n\r\n\r\n                </section>\r\n            </article>\r\n        </main>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}